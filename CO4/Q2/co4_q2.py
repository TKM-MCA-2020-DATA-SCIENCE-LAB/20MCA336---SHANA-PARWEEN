# -*- coding: utf-8 -*-
"""CO4_Q2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1MoZtefX2VhOQvfLCLsc7l-T8VLG_MuUq
"""

import tensorflow as tf
from tensorflow.keras import datasets,layers,models
import matplotlib.pyplot as plt
import numpy as np
from sklearn.metrics import classification_report

(x_train,y_train),(x_test,y_test) = datasets.cifar10.load_data()

x_train.shape

x_test.shape

classes = ['airplane','automobile','bird','cat','deer','dog','frog','horse','ship','truck']

def plot_sample(x,y,index):
  plt.figure(figsize=(14,2))
  plt.imshow(x[index])
  plt.xlabel(y[index])

plot_sample(x_train,y_train,1)

#Normalize
x_train=x_train/255
x_test=x_test/255

#model
cnn=models.Sequential([
 #feature extraction
 layers.Conv2D(filters=32,activation='relu',kernel_size=(3,3),input_shape=(32,32,3)),
 layers.MaxPooling2D((2,2)),

 #Classification
 layers.Flatten(),
 layers.Dense(64,activation='relu'),
 layers.Dense(10,activation='softmax')                      
])

cnn.compile(optimizer='adam',loss='sparse_categorical_crossentropy',metrics=['accuracy'])

cnn.fit(x_train,y_train,epochs=20)

y_pred=cnn.predict(x_test)

cnn.evaluate(x_test,y_test)

y_test=y_test.reshape(-1,)
y_pred=cnn.predict(x_test)

y_classes=[np.argmax(element) for element in y_pred]
print("Classification report:\n",classification_report(y_test,y_classes))

