# -*- coding: utf-8 -*-
"""CO1_Q4(PANDAS).ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1U3x3VSnugrpgUNakXZ6cnd_Nm7p8Cpan

SERIES
"""

import numpy as np
  import pandas as pd

"""To convert list,numpy, array, or dictionary to a series"""

labels =['a','b','c']
my_list = [10,20,30]
arr=np.array([10,20,30])
d = {'a':10,'b':20,'c':30}

pd.Series(my_list)

pd.Series(my_list,index=labels)

"""NumPy Arrays:"""

pd.Series(arr)

pd.Series(arr,labels)

"""Dictionary:"""

pd.Series(d)

pd.Series(d,labels)

"""Using an Index"""

series1 = pd.Series ([1,2,3,4,5] , index=['USA','SPAIN','GERMANY','JAPAN','UK'])

series1

series2 = pd.Series ([1,2,3,4,5] , index=['USA','SPAIN','GERMANY','ITALY','UK'])
series2

series1 + series2

pd.Series('USA')

"""DATAFRAMES"""

from numpy.random import randn
np.random.seed(101)

df= pd.DataFrame(randn(5,4), index='A B C D E'.split(),columns='W X Y Z'.split())
df

np.random.seed(95)
df= pd.DataFrame(randn(5,4), index='A B C D E'.split(),columns='W X Y Z'.split())
df

"""SELECTION AND INDEXING"""

df['Z']

df[['Z','W']]

"""CREATING A NEW COLUMN BY ADDING W AND Y"""

df['new'] = df['W']+df['Y']

df

"""REMOVING new COLUMN:"""

df.drop('new')

df.drop('new', axis=1)

df

df.drop('new', axis=1, inplace=True)
df

"""DROP ROWS:"""



df.loc['A']

df.loc[0]

df. iloc[0]

df.loc['A','Y']

df.loc[['A','B'],['W','Y']]

"""CONDITIONAL SELECTION:"""

df

df>0

df[df>0]

df<0

df[df<0]

df[df['W']<0]

df['W']<0

df[df['W']<0]['Y']

df[(df['W']<0) & (df['Y']>0)]

df[(df['W']<0) | (df['Y']>0)]

"""**MISSING DATA**"""

import numpy as np
import pandas as pd

df = pd.DataFrame({'A': [1,2,np.NaN],'B':[5,np.NaN,np.NaN],'C': [1,2,3]})
df

df.dropna()

df.dropna(axis = 1)

df.dropna(thresh=2)

df.fillna(value='FILL VALUE')

df['A'].fillna(value = df['A'].mean())

"""**16 /12/2021**
**OPERATIONS IN PANDAS** 
"""

df = pd.DataFrame({'col1':[1,2,3,4],'col2':[444,555,666,444],'col3':['ab','cd','ef','gh']})
df

"""**INFO ON UNIQUE VALUES**"""

df['col2'].unique()

df['col2'].nunique()

df['col2'].value_counts()

"""**SELECTING DATA:**"""

#Select from dataframe using criteria from multiple columns
newdf = df[(df['col2']>3)& (df["col2"]==555)]
newdf

"""**APPLYING FUNCTIONS:**"""

def times2(x):
    return x*2

df['col1'].apply(times2)

df['col3'].apply(len)

df['col1'].sum()

del df['col2']
df

"""**GET COLUMN AND INDEX NAMES:**"""

df.columns

df.index

"""**SORTING AND ORDERING A DATAFRAME**"""

df

df.sort_values(by='col3') #inplace =False by Default

df.sort_values(by='col3', inplace =True)
df

df = pd.DataFrame({'col1':[1,2,3,4],'col2':[444,555,666,444]})
df

df.sort_values(by='col1')

df.sort_values(by='col2', inplace =True)
df

"""**FIND NULL CVALUES OR CHECK FOR NULL VALUES**"""

df.isnull()

"""***DATA INPUT AND OUTPUT:::***"""

df=pd.read_csv('Salaries')