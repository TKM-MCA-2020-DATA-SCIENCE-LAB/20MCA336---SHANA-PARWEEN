# -*- coding: utf-8 -*-
"""Excerise_numpy.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Cd1BM-1YQhTNNv-hSM5B6NF9hfavJOTW
"""

import numpy as np

a = np.zeros(10)

a

np.ones(10)

np.ones(10)

a = np.ones(10)

a*5

a =np.arange(10,51)

a

b = np.arange(10,51,2)

b

a = np.arange(0,9)

a.reshape(3,3)

a = np.array(a)

a

np.eye(3)

np.random.rand(1)

Use numpy to generate an array of 25 random numbers sampled from a standard normal distribution

a = np.random.randn(25)

a

a = np.random.randn(5,5)

a

create the following matrix the number should be ranging between 0 and 1

np.linspace(0,100,1)



np.linspace(0,1,100)

a = np.arange(1,100,1)

a

a.reshape(10,10)

a/100

create an array of 20 lineraly spaced points between 0 and 1

np.linspace(0,1,20)

a = np.arange(1,26).reshape(5,5)

a

a[2:,1:]

a[3:4,4:]

a[3,4]

a[0:3,1:2]

a[4:,0:]

a[3:,0:]

get the sum of all values in the matrix



create the following matrix the number should be ranging between 0 and 1

np.linspace(0,100,1)

a.sum()

a.std()

import numpy as np

A = np.arange(0,25)

A

from scipy.linalg import svd

a = np.arange(1,19).reshape(6,3)

U, s, VT = svd(a)

U

s

VT

U, s, VT = svd(a,full_matrices=True)

U

U, s, VT = svd(a,full_matrices=False)

U

from numpy import diag

from numpy import dot

a= (U @ np.diag(s) @ VT)

a